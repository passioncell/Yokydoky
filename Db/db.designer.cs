#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Db
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="yokydoky")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 확장성 메서드 정의
    partial void OnCreated();
    partial void InsertArticle(Article instance);
    partial void UpdateArticle(Article instance);
    partial void DeleteArticle(Article instance);
    partial void InsertSearchKeywordModel(SearchKeywordModel instance);
    partial void UpdateSearchKeywordModel(SearchKeywordModel instance);
    partial void DeleteSearchKeywordModel(SearchKeywordModel instance);
    partial void InsertArticleCategory(ArticleCategory instance);
    partial void UpdateArticleCategory(ArticleCategory instance);
    partial void DeleteArticleCategory(ArticleCategory instance);
    partial void InsertMember(Member instance);
    partial void UpdateMember(Member instance);
    partial void DeleteMember(Member instance);
    partial void InsertMemberKeyword(MemberKeyword instance);
    partial void UpdateMemberKeyword(MemberKeyword instance);
    partial void DeleteMemberKeyword(MemberKeyword instance);
    #endregion
		
		public dbDataContext() : 
				base(global::Db.Properties.Settings.Default.yokydokyConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Article> Article
		{
			get
			{
				return this.GetTable<Article>();
			}
		}
		
		public System.Data.Linq.Table<SearchKeywordModel> SearchKeywordModel
		{
			get
			{
				return this.GetTable<SearchKeywordModel>();
			}
		}
		
		public System.Data.Linq.Table<ArticleCategory> ArticleCategory
		{
			get
			{
				return this.GetTable<ArticleCategory>();
			}
		}
		
		public System.Data.Linq.Table<Member> Member
		{
			get
			{
				return this.GetTable<Member>();
			}
		}
		
		public System.Data.Linq.Table<MemberKeyword> MemberKeyword
		{
			get
			{
				return this.GetTable<MemberKeyword>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.signUp")]
		public int signUp([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> birthday, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sex)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, password, name, birthday, sex);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Article")]
	public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _content;
		
		private string _reporter;
		
		private System.Nullable<System.DateTime> _write_date;
		
		private System.Nullable<System.DateTime> _modify_date;
		
		private string _keyword;
		
		private System.Nullable<int> _like;
		
		private System.Nullable<int> _FK_ArticleCategory;
		
		private EntityRef<ArticleCategory> _ArticleCategory;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OnreporterChanging(string value);
    partial void OnreporterChanged();
    partial void Onwrite_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onwrite_dateChanged();
    partial void Onmodify_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onmodify_dateChanged();
    partial void OnkeywordChanging(string value);
    partial void OnkeywordChanged();
    partial void OnlikeChanging(System.Nullable<int> value);
    partial void OnlikeChanged();
    partial void OnFK_ArticleCategoryChanging(System.Nullable<int> value);
    partial void OnFK_ArticleCategoryChanged();
    #endregion
		
		public Article()
		{
			this._ArticleCategory = default(EntityRef<ArticleCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(255)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reporter", DbType="VarChar(50)")]
		public string reporter
		{
			get
			{
				return this._reporter;
			}
			set
			{
				if ((this._reporter != value))
				{
					this.OnreporterChanging(value);
					this.SendPropertyChanging();
					this._reporter = value;
					this.SendPropertyChanged("reporter");
					this.OnreporterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_write_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> write_date
		{
			get
			{
				return this._write_date;
			}
			set
			{
				if ((this._write_date != value))
				{
					this.Onwrite_dateChanging(value);
					this.SendPropertyChanging();
					this._write_date = value;
					this.SendPropertyChanged("write_date");
					this.Onwrite_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modify_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> modify_date
		{
			get
			{
				return this._modify_date;
			}
			set
			{
				if ((this._modify_date != value))
				{
					this.Onmodify_dateChanging(value);
					this.SendPropertyChanging();
					this._modify_date = value;
					this.SendPropertyChanged("modify_date");
					this.Onmodify_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keyword", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string keyword
		{
			get
			{
				return this._keyword;
			}
			set
			{
				if ((this._keyword != value))
				{
					this.OnkeywordChanging(value);
					this.SendPropertyChanging();
					this._keyword = value;
					this.SendPropertyChanged("keyword");
					this.OnkeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[like]", Storage="_like", DbType="Int")]
		public System.Nullable<int> like
		{
			get
			{
				return this._like;
			}
			set
			{
				if ((this._like != value))
				{
					this.OnlikeChanging(value);
					this.SendPropertyChanging();
					this._like = value;
					this.SendPropertyChanged("like");
					this.OnlikeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_ArticleCategory", DbType="Int")]
		public System.Nullable<int> FK_ArticleCategory
		{
			get
			{
				return this._FK_ArticleCategory;
			}
			set
			{
				if ((this._FK_ArticleCategory != value))
				{
					if (this._ArticleCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_ArticleCategoryChanging(value);
					this.SendPropertyChanging();
					this._FK_ArticleCategory = value;
					this.SendPropertyChanged("FK_ArticleCategory");
					this.OnFK_ArticleCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleCategory_Article", Storage="_ArticleCategory", ThisKey="FK_ArticleCategory", OtherKey="Id", IsForeignKey=true)]
		public ArticleCategory ArticleCategory
		{
			get
			{
				return this._ArticleCategory.Entity;
			}
			set
			{
				ArticleCategory previousValue = this._ArticleCategory.Entity;
				if (((previousValue != value) 
							|| (this._ArticleCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArticleCategory.Entity = null;
						previousValue.Article.Remove(this);
					}
					this._ArticleCategory.Entity = value;
					if ((value != null))
					{
						value.Article.Add(this);
						this._FK_ArticleCategory = value.Id;
					}
					else
					{
						this._FK_ArticleCategory = default(Nullable<int>);
					}
					this.SendPropertyChanged("ArticleCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchKeywordModel")]
	public partial class SearchKeywordModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _keyword;
		
		private EntitySet<MemberKeyword> _MemberKeyword;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnkeywordChanging(string value);
    partial void OnkeywordChanged();
    #endregion
		
		public SearchKeywordModel()
		{
			this._MemberKeyword = new EntitySet<MemberKeyword>(new Action<MemberKeyword>(this.attach_MemberKeyword), new Action<MemberKeyword>(this.detach_MemberKeyword));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keyword", DbType="NVarChar(50)")]
		public string keyword
		{
			get
			{
				return this._keyword;
			}
			set
			{
				if ((this._keyword != value))
				{
					this.OnkeywordChanging(value);
					this.SendPropertyChanging();
					this._keyword = value;
					this.SendPropertyChanged("keyword");
					this.OnkeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchKeywordModel_MemberKeyword", Storage="_MemberKeyword", ThisKey="id", OtherKey="FK_SearchKeywordModel")]
		public EntitySet<MemberKeyword> MemberKeyword
		{
			get
			{
				return this._MemberKeyword;
			}
			set
			{
				this._MemberKeyword.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MemberKeyword(MemberKeyword entity)
		{
			this.SendPropertyChanging();
			entity.SearchKeywordModel = this;
		}
		
		private void detach_MemberKeyword(MemberKeyword entity)
		{
			this.SendPropertyChanging();
			entity.SearchKeywordModel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArticleCategory")]
	public partial class ArticleCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private EntitySet<Article> _Article;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public ArticleCategory()
		{
			this._Article = new EntitySet<Article>(new Action<Article>(this.attach_Article), new Action<Article>(this.detach_Article));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArticleCategory_Article", Storage="_Article", ThisKey="Id", OtherKey="FK_ArticleCategory")]
		public EntitySet<Article> Article
		{
			get
			{
				return this._Article;
			}
			set
			{
				this._Article.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Article(Article entity)
		{
			this.SendPropertyChanging();
			entity.ArticleCategory = this;
		}
		
		private void detach_Article(Article entity)
		{
			this.SendPropertyChanging();
			entity.ArticleCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Member")]
	public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _email;
		
		private string _password;
		
		private string _name;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private System.Nullable<int> _sex;
		
		private EntitySet<MemberKeyword> _MemberKeyword;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnbirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdayChanged();
    partial void OnsexChanging(System.Nullable<int> value);
    partial void OnsexChanged();
    #endregion
		
		public Member()
		{
			this._MemberKeyword = new EntitySet<MemberKeyword>(new Action<MemberKeyword>(this.attach_MemberKeyword), new Action<MemberKeyword>(this.detach_MemberKeyword));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(10)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="Date")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="Int")]
		public System.Nullable<int> sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberKeyword", Storage="_MemberKeyword", ThisKey="id", OtherKey="FK_Member")]
		public EntitySet<MemberKeyword> MemberKeyword
		{
			get
			{
				return this._MemberKeyword;
			}
			set
			{
				this._MemberKeyword.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MemberKeyword(MemberKeyword entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_MemberKeyword(MemberKeyword entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MemberKeyword")]
	public partial class MemberKeyword : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _FK_Member;
		
		private System.Nullable<int> _FK_SearchKeywordModel;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<SearchKeywordModel> _SearchKeywordModel;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnFK_MemberChanging(System.Nullable<int> value);
    partial void OnFK_MemberChanged();
    partial void OnFK_SearchKeywordModelChanging(System.Nullable<int> value);
    partial void OnFK_SearchKeywordModelChanged();
    #endregion
		
		public MemberKeyword()
		{
			this._Member = default(EntityRef<Member>);
			this._SearchKeywordModel = default(EntityRef<SearchKeywordModel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_Member", DbType="Int")]
		public System.Nullable<int> FK_Member
		{
			get
			{
				return this._FK_Member;
			}
			set
			{
				if ((this._FK_Member != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_MemberChanging(value);
					this.SendPropertyChanging();
					this._FK_Member = value;
					this.SendPropertyChanged("FK_Member");
					this.OnFK_MemberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_SearchKeywordModel", DbType="Int")]
		public System.Nullable<int> FK_SearchKeywordModel
		{
			get
			{
				return this._FK_SearchKeywordModel;
			}
			set
			{
				if ((this._FK_SearchKeywordModel != value))
				{
					if (this._SearchKeywordModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_SearchKeywordModelChanging(value);
					this.SendPropertyChanging();
					this._FK_SearchKeywordModel = value;
					this.SendPropertyChanged("FK_SearchKeywordModel");
					this.OnFK_SearchKeywordModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberKeyword", Storage="_Member", ThisKey="FK_Member", OtherKey="id", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.MemberKeyword.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.MemberKeyword.Add(this);
						this._FK_Member = value.id;
					}
					else
					{
						this._FK_Member = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchKeywordModel_MemberKeyword", Storage="_SearchKeywordModel", ThisKey="FK_SearchKeywordModel", OtherKey="id", IsForeignKey=true)]
		public SearchKeywordModel SearchKeywordModel
		{
			get
			{
				return this._SearchKeywordModel.Entity;
			}
			set
			{
				SearchKeywordModel previousValue = this._SearchKeywordModel.Entity;
				if (((previousValue != value) 
							|| (this._SearchKeywordModel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SearchKeywordModel.Entity = null;
						previousValue.MemberKeyword.Remove(this);
					}
					this._SearchKeywordModel.Entity = value;
					if ((value != null))
					{
						value.MemberKeyword.Add(this);
						this._FK_SearchKeywordModel = value.id;
					}
					else
					{
						this._FK_SearchKeywordModel = default(Nullable<int>);
					}
					this.SendPropertyChanged("SearchKeywordModel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
